--varbinary(max)  ->BLOB
--date            ->timestamp
--time            ->timestamp
--[時段用time其餘日期欄位都用timestamp]

drop table Mail_template;
drop table Stu_additional;
drop table Member_status;
drop table Test_Date;
drop table Test_interval;
drop table Examiner_offday;
drop table Employee;
drop table Student;
drop table Sign_list;
drop table Test_period;
drop table Class;
drop table Edu;


create table Edu
(
  edu_id             int   primary key  NOT NULL  generated by default as identity(
 																					start with 1,     --自增主键的起始值
																					increment by 1,    --每次主键生成的增量
																					Minvalue 1,        --最小值
																					Maxvalue 1000,     --最大值
																					No cycle,          --是否可循环
																					No cache          --是否缓存
																				  ),     
  edu_name           nvarchar(30)  NOT NULL ,          
  edu_add            nvarchar(30)  NOT NULL,
  edu_tel            nvarchar(15)  NOT NULL,
  edu_contact        nvarchar(10)  NOT NULL
);  

create table Class
(
  class_id             nvarchar(10)  primary key  NOT NULL,     
  class_name           nvarchar(30)  NOT NULL ,           
  class_contact        nvarchar(10) ,
  class_teach          nvarchar(10)  NOT NULL,
  edu_id               int           fk_edu_id references   Edu(edu_id)
);  

create table Student
(
  stu_id               int           primary key  NOT NULL  generated by default as identity(
		 																				     start with 1,     --自增主键的起始值
																						     increment by 1,    --每次主键生成的增量
																						     Minvalue 1,        --最小值
																						     Maxvalue 1000,     --最大值
																						     No cycle,          --是否可循环
																					         No cache          --是否缓存
																						    ), 
  stu_group            int           NOT NULL,
  stu_note1            nvarchar(100) ,
  stu_seatno           int           NOT NULL,     
  stu_name             nvarchar(10)  NOT NULL ,
  stu_age              int           NOT NULL,
  stu_sch              nvarchar(30)  ,
  stu_sex              int           ,           
  stu_email            nvarchar(30)  UNIQUE NOT NULL,
  stu_pre              int           ,
  stu_implement        double        ,
  stu_testtime         timestamp     ,
  stu_interview        double        ,
  stu_total            double        ,
  stu_workdate         timestamp     ,
  stu_except           double        ,
  stu_final            int           ,
  stu_note2            nvarchar(100) ,
  class_id			   nvarchar(10)  fk_class_id  references  Class(class_id) NOT NULL,
  pub_key              BLOB          ,
  pri_key              BLOB          ,
  cipher_text	       BLOB          ,
  log_pw               BLOB           
);  

create table Sign_list
(
  sl_id                int            primary key  NOT NULL,     
  sl_name              nvarchar(20)   NOT NULL         
);  

create table Employee
(
  emp_id               nvarchar(10)  primary key  NOT NULL,     
  emp_name             nvarchar(20)  NOT NULL ,           
  dep_id               int	         ,     
  dep_name	           nvarchar(30)  NOT NULL ,   
  emp_mail             nvarchar(30)  UNIQUE NOT NULL,
  sl_id                int           fk_sl_id  references  Sign_list(sl_id) NOT NULL   
);  

create table Test_period
(
  test_hour_id           int	       primary key  NOT NULL generated by default as identity(
 																					start with 1,     --自增主键的起始值
																					increment by 1,    --每次主键生成的增量
																					Minvalue 1,        --最小值
																					Maxvalue 1000,     --最大值
																					No cycle,          --是否可循环
																					No cache          --是否缓存
																				  ), 
  test_starthour         time          NOT NULL ,
  test_endhour           time          NOT NULL          
);  


create table Test_interval
(
  test_interval_id      int            primary key  NOT NULL  generated by default as identity(
 																					start with 1,     --自增主键的起始值
																					increment by 1,    --每次主键生成的增量
																					Minvalue 1,        --最小值
																					Maxvalue 1000,     --最大值
																					No cycle,          --是否可循环
																					No cache          --是否缓存
																				  ), 
  class_id               nvarchar(10)  UNIQUE fk_class_id  references  Class(class_id) NOT NULL,    
  test_startdate         timestamp     NOT NULL ,           
  test_enddate           timestamp     NOT NULL
);   

create table Test_Date
(
  test_date_id      int         PRIMARY KEY   NOT NULL  generated by default as identity(
 																					start with 1,     --自增主键的起始值
																					increment by 1,    --每次主键生成的增量
																					Minvalue 1,        --最小值
																					Maxvalue 1000,     --最大值
																					No cycle,          --是否可循环
																					No cache          --是否缓存
																				  ), 
  class_id          nvarchar(10)  fk_class_id references  Class(class_id) NOT NULL,  
  test_hour_id      int	          fk_test_hour_id  references  Test_period(test_hour_id) NOT NULL,
  test_date         timestamp     NOT NULL, 
  test_people       int           NOT NULL, 
  exam_people       int           NOT NULL
); 

create table Member_status
(
  sta_id           int	          primary key  NOT NULL,
  sta_name         nvarchar(10)   NOT NULL           
); 

create table Stu_additional
(
  stu_add_id       int            primary key  NOT NULL  generated by default as identity(
		 																				  start with 1,     --自增主键的起始值
																						  increment by 1,    --每次主键生成的增量
																						  Minvalue 1,        --最小值
																						  Maxvalue 1000,     --最大值
																						  No cycle,          --是否可循环
																					      No cache          --是否缓存
																						 ), 
  stu_id           int            fk_stu_id references  Student(stu_id) NOT NULL, 
  test_start       timestamp      NOT NULL,
  test_end         timestamp      NOT NULL,
  stu_applytime    timestamp,
  sta_id           int            fk_sta_id references  Member_status(sta_id) NOT NULL ,
  emp_id           nvarchar(10)   fk_emp_id references  Employee(emp_id) NOT NULL,
  confirm_time     timestamp
); 

create table Mail_template
(
  mail_id          int	         primary key  NOT NULL  generated by default as identity(
		 																				  start with 1,     --自增主键的起始值
																						  increment by 1,    --每次主键生成的增量
																						  Minvalue 1,        --最小值
																						  Maxvalue 1000,     --最大值
																						  No cycle,          --是否可循环
																					      No cache          --是否缓存
																						 ), 
  mail_name        nvarchar(10) ,     
  mail_text        nvarchar(250)           
); 

create table Examiner_offday
( exam_id         int	         primary key  NOT NULL  generated by default as identity(
		 																				  start with 1,     --自增主键的起始值
																						  increment by 1,    --每次主键生成的增量
																						  Minvalue 1,        --最小值
																						  Maxvalue 1000,     --最大值
																						  No cycle,          --是否可循环
																					      No cache          --是否缓存
																						 ), 
  emp_id           nvarchar(10)	  fk_emp_id references  Employee(emp_id) NOT NULL,
  off_startdate    timestamp      NOT NULL,       
  off_enddate      timestamp      NOT NULL, 
  off_day          int            NOT NULL,
  emp_job_id       nvarchar(10)	  fk_emp_job_id  references  Employee(emp_id) NOT NULL
); 

create table Fullcalendar
(
  order_id         int            NOT NULL  generated by default as identity(
		 																				  start with 1,     --自增主键的起始值
																						  increment by 1,    --每次主键生成的增量
																						  Minvalue 1,        --最小值
																						  Maxvalue 1000,     --最大值
																						  No cycle,          --是否可循环
																					      No cache          --是否缓存
																						 ), 
  ftest_hour_id    int            NOT NULL,
  test_start       timestamp      NOT NULL with DEFAULT CURRENT TIMESTAMP,
  test_end         timestamp      NOT NULL with DEFAULT CURRENT TIMESTAMP,
  color            nvarchar(10)   NOT NULL,
  stu_id           int            fk_stu_id references  Student(stu_id) NOT NULL, 
  title            nvarchar(20)   NOT NULL,
  editable         int            NOT NULL WITH DEFAULT 1 CHECK (editable = 1 OR editable = 0),
  overlap          int            NOT NULL WITH DEFAULT 1 CHECK (overlap = 1 OR overlap = 0),
  rendering        nvarchar(10)   NOT NULL
);



--drop table Talk
create table Talk
(
 talkId         int          primary key  NOT NULL  generated by default as identity(
		 																				  start with 1,     --自增主键的起始值
																						  increment by 1,    --每次主键生成的增量
																						  Minvalue 1,        --最小值
																						  Maxvalue 1000,     --最大值
																						  No cycle,          --是否可循环
																					      No cache          --是否缓存
																						 ), 
                 
  talkTitle    nvarchar(20)  NOT NULL , 
  talkName     nvarchar(10)  NOT NULL ,  
  talkChose    int  NOT NULL,
  talkMail     nvarchar(30),
  talkContent  nvarchar(100)  NOT NULL,
  retalkContent  nvarchar(100)  ,
  talkDate     timestamp      NOT NULL,
  retalkDate   timestamp, 
  talkstatus    int  NOT NULL    
);  







